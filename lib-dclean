#!/bin/bash

source /usr/lib/libui.sh
libui_sh_init

is_svn () {
	dir=$1
	[ -r "$dir/.svn" ] && svn info "$dir" &>/dev/null
}

is_git () {
	dir=$1
	# with git, do not check for $dir/.git, there is only a .git in the project root
	cd "$dir" || die "cannot cd into $dir. this should never happen"
	git status &>/dev/null
	if [ $? -lt 128 ]
	then
		return 0
	else
		cd - >/dev/null || die "cannot go back to dir where i started. this should never happen"
		return 1
	fi
}
vcs_ignored () {
	local i=$1
	[ -r "$1" ] || die_error "Could not read from '$1' (arg1 of vcs_ignored) to determine ignored state"
	ret=1
	if [ $type = svn ]
	then
		status=$(svn status "$i")
		[[ -n "$status" && $status = I* ]] && ret=0
	elif [ $type = git ]
	then
		cd `dirname $i`
		file=`basename $i`
		git ls-files -i -o --exclude-standard $file | grep -q "^$file$" && ret=0
		cd - > /dev/null
	fi
	return $ret
}

vcs_clean () {
	local i=$1
	[ -r "$1" ] || die_error "Could not read from '$1' (arg1 of vcs_clean) to determine cleanliness"
	ret=0
	if [ $type = svn ]
	then
		status=$(svn status "$i")
		[[ -n "$status" && $status != I* ]] && ret=1
	elif [ $type == git ]
	then
		cd `dirname $i`
		git status --porcelain `basename $i` | egrep -q '^ M|\?\? ' && ret=1
		cd - > /dev/null
	fi
	return $ret
}
